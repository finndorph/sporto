#labels Featured
        <h1>SPorto - Simple SAML 2.0 Service Provider</h1>

          <h2><a href="#about" name="about">About</a></h2>
 
            <p>SPorto is a minimal SAML 2.0 Service Provider implemented in PHP for
            use in a hub'n'spoke federation like WAYF.</p>
            <p>Core functionallity is:</p>
            <ul>
                <li>Send a signed !AuthnRequest to an IdP - Only one IdP supported</li>
                <li>Receive and verify a signed SAMLResponse</li>
                <li>Accept an optional list of IdP entityID's used for scoping</li>
            </ul>
            <p>It returns an array of the attributes in the !AttributeStatement
            of the response and the response it self.</p>

     
          <h2><a href="#example" name="example">Example</a></h2>
   
            <p>Configuration for SPorto can be placed in a seperate file or in
            the sporto.php file itself to make SPorto self-contained. In the
            example below the configuration is placed in a seperate file.</p>
{{{            
<?php
session_start();
include_once('lib/sporto.php');
include_once('config/sporto_config.php');
if(!isset($_SESSION['SAML'])) {
    try {
        $sporto = new SPorto($sporto_config);
        $_SESSION['SAML'] = $sporto->authenticate();
    } catch (Exception $e) {
        echo $e->getMessage();
        exit;
    }
}
}}}   
          <h2><a href="#config" name="config">Configuration</a></h2>
       
            <p>Configuration of SPorto is done by putting the required options
            into a simple PHP array.</p>
            <p>The following is a list of all options and they are all
            required.</p>
            <ul>
                <li>idp_certificate - Certificate from IdP</li>
                <li>sso - !SingleSignoOnService URL for IdP</li>
                <li>private_key - Private key used for signing requests</li>
                <li>acs - !AssertionConsumerService URL for the SP (SHOULD point to a
                script that invokes SPorto)</li>
                <li>entityid - entityId for the SP</li>
            </ul>
       
                <h3><a href="#configexample" name="configexample">Example configuration</a></h3>
               
{{{
$sporto_config = array(
    'idp_certificate' => '...',
    'sso' => '...',
    'private_key' => '...',
    'asc' => '...',
    'entityid' => '...',
);
}}}           
          <h2><a href="#session" name="session">Session management</a></h2>
      
            <p>SPorto does not contain any session management. It is up to the
            containig application to handle this.
       
  